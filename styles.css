/* Flexbox Part 1 */

#flex-section1 ul {
  display: flex;
  justify-content: space-evenly; /* equal space at beginning, between items, and end */
  align-items: center;
  list-style: none;
  margin: 0;
  padding: 0;
}

/* end Flexbox Part 1 */


/* Grid Part 2 - revised: blue = right 4/6 full height; red = left 4/6, 1/3 height centered */

#grid-section2 .grid {
  display: grid;
  /* 6 equal columns so "4 columns out of 6" == 4/6 == 2/3 width */
  grid-template-columns: repeat(6, 1fr);
  /* 3 equal rows so a single row = 1/3 of height; middle row is row 2 */
  grid-template-rows: repeat(3, 1fr);
  gap: 0;                     /* no gaps between cells (keeps clean overlap) */
  align-items: stretch;
  justify-items: stretch;
  box-sizing: border-box;

  /* ensure the grid has visible height so "full height" is meaningful.
     Adjust this min-height if you want a taller/shorter layout. */
  min-height: 360px;
}

#grid-section2 .gridboxblue {
  /* occupy the right-most 4 columns: columns 3..6 -> indices 3 / 7
     (4 columns out of 6 = 4/6 = 2/3 width) */
  grid-column: 3 / 7;

  /* occupy all 3 rows (full height of the grid) */
  grid-row: 1 / 4;

  z-index: 2;               /* sit above the red box */
  display: flex;
  align-items: center;
  justify-content: center;
  align-self: stretch;
  justify-self: stretch;
}

#grid-section2 .gridboxred {
  /* occupy the left-most 4 columns: columns 1..4 -> indices 1 / 5
     (also 4/6 width, overlapping with the blue area) */
  grid-column: 1 / 5;

  /* occupy only the middle row (row 2), which is 1/3 of total height */
  grid-row: 2 / 3;

  z-index: 1;               /* sit behind the blue box */
  display: flex;
  align-items: center;
  justify-content: center;
  align-self: center;       /* center vertically in its grid row */
  justify-self: stretch;
}



/* Flexbox Part 3 */

/* center the .card both horizontally and vertically inside the .box */
#flex-section3 .box {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 16px;
  box-sizing: border-box;
}

/* turn the tags list into inline, wrapping "tag" items */
#flex-section3 .tags ul {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
  list-style: none;
  margin: 12px 0 0 0;
  padding: 0;
}

/* end Flexbox Part 3 */


/* Grid Part 1 */

#grid-section1 .grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr); /* four equal columns */
  grid-auto-rows: 100px;                  /* rows auto-generate at 100px height */
  gap: 20px;                              /* 20px gap between rows & columns */
  box-sizing: border-box;
}

/* end Grid Part 1 */


/* Grid Part 2 */

/* position the blue box so it sits over top-left-to-middle area */
#grid-section2 .gridboxblue {
  grid-column: 2 / 4; /* occupy columns 2 and 3 */
  grid-row: 1 / 3;    /* occupy rows 1 and 2 */
  z-index: 2;         /* on top of the red box */
  align-self: stretch;
  justify-self: stretch;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* position the red box so it sits under/behind the blue box */
#grid-section2 .gridboxred {
  grid-column: 1 / 3; /* occupy columns 1 and 2 */
  grid-row: 2 / 4;    /* occupy rows 2 and 3 */
  z-index: 1;         /* behind the blue box */
  align-self: stretch;
  justify-self: stretch;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* end Grid Part 2 */


/* Grid Part 3 */

#grid-section3 .grid {
  display: grid;
  grid-template-columns: 2fr 1fr;         /* first column twice the width of second */
  grid-template-rows: 100px 300px 100px;  /* row heights: 100, 300, 100 */
  gap: 10px;
  box-sizing: border-box;
}

/* first row spans both columns */
#grid-section3 .box1 {
  grid-column: 1 / -1;
  grid-row: 1;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* left middle */
#grid-section3 .box2 {
  grid-column: 1 / 2;
  grid-row: 2;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* right middle */
#grid-section3 .box3 {
  grid-column: 2 / 3;
  grid-row: 2;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* bottom row spans both columns */
#grid-section3 .box4 {
  grid-column: 1 / -1;
  grid-row: 3;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* end Grid Part 3 */


/* Transition Part */

#transition-section .box a {
  display: inline-block;
  background-color: #ccc;
  color: #000;
  padding: 20px;
  text-decoration: none;

  /* transition properties:
     - specify properties to animate (background-color and color)
     - default transition duration when returning to normal (hover-out)
  */
  transition-property: background-color, color;
  transition-duration: 3s;     /* when hover ends, transition back over 3s */
  transition-timing-function: ease;
}

#transition-section .box a:hover {
  background-color: #cc0000;
  color: #fff;

  /* when hovering, use a faster transition (0.5s) for the hover-in */
  transition-duration: 0.5s;
}

/* end Transition Part */
